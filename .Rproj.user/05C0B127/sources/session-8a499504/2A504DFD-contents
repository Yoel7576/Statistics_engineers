---
title: "SDCA-ANOVA One-way"
author: "Henry W. Santillan Culquimboz"
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
output-dir: "../"
---

```{r}
# ====================================
# 1. CARGA DE LIBRERÍAS
# ====================================
# =============================================================================
# LIBRERÍAS NECESARIAS PARA ANOVA DE UNA VÍA COMPLETO
# =============================================================================

# Librerías básicas
library(stats)      # Funciones básicas de estadística (viene con R base)
library(car)        # Para pruebas de homogeneidad de varianzas (Levene)
library(nortest)    # Para pruebas de normalidad adicionales
library(openxlsx)

# Librerías para análisis post-hoc
library(agricolae)  # Pruebas post-hoc (Tukey, Duncan, LSD, etc.)
library(multcomp)   # Comparaciones múltiples

# Librerías para gráficos
library(ggplot2)    # Gráficos elegantes
library(ggpubr)     # Gráficos estadísticos con ggplot2
library(gridExtra)  # Organizar múltiples gráficos

# Librerías para reportes y tablas
library(broom)      # Convertir resultados a data frames
library(knitr)      # Tablas elegantes
library(dplyr)      # Manipulación de datos
```

```{r}
# ====================================
# 2. IMPORTACIÓN Y EXPLORACION DE DATOS
# ====================================
getwd() # Verificar escritorio

# Importar desde archivo Excel
DatAov1 <- read_excel("Datos/EjerciciosANOVA.xlsx", 
    sheet = "DCA-ANOVA_One-way")

# Ver estructura detallada
str(DatAov1)
```

```{r}
# ====================================
# 3. PREPARACION Y AJUSTE DEL MODELO
# ====================================
# Convert categorical variables to factors for incidence
DatAov1 <- DatAov1 |> 
  mutate(ID = factor(ID),
         Dosis = factor(Dosis))

# Ver estructura detallada
str(DatAov1)

# Ajuste del modelo estadistico (ANOVA DE UNA VIA)
modeloAov1 <- aov(Longitud_Raiz ~ Dosis, data = DatAov1)
summary(modeloAov1)

```

```{r}
# =======================================
# 4. VERIFICACION DE SUPUESTOS DEL MODELO
# =======================================
# Verificación gráfica de supuestos
par(modeloAov1 = c(2, 2))
plot(modeloAov1)

# Gráfico Q-Q para residuos usando car::qqPlot
qqPlot(residuals(modeloAov1), 
       main = "Q-Q Plot de Residuos del ANOVA", 
       xlab = "Cuantiles teóricos", 
       ylab = "Cuantiles observados (Residuos)",
       col = "blue")

## A) NORMALIDAD DE RESIDUOS
# Prueba de Shapiro-Wilk para residuos
shapiro.test(residuals(modeloAov1))

# Prueba de Anderson-Darling
ad.test(residuals(modeloAov1))

# B) HOMOGENEIDAD DE VARIANZAS
# Prueba de Levene
leveneTest(Longitud_Raiz ~ Dosis, data = DatAov1)

# Prueba de Bartlett (más sensible a no normalidad)
bartlett.test(Longitud_Raiz ~ Dosis, data = DatAov1)
```

```{r}
# =======================================
# 5. PRUEBAS POST HOC
# =======================================
# Tukey con letras
HSD_testAov1 <- HSD.test(modeloAov1, "Dosis", group = TRUE)
print(HSD_testAov1$groups)

# Duncan
duncan_test <- duncan.test(modeloAov1, "Dosis", group = TRUE)
print(duncan_test)

# LSD (Least Significant Difference)
lsd_test <- LSD.test(modeloAov1, "Dosis", group = TRUE)
print(lsd_test)

# Dunnet test
# Reordenar los niveles y Reajustar el modelo
DatAov1$Dosis <- relevel(DatAov1$Dosis, ref = "0ppm")
modelo_lm1 <- lm(Longitud_Raiz ~ Dosis, data = DatAov1)

## Dunnet test
dunnett_test <- glht(modelo_lm1, linfct = mcp(Dosis = "Dunnett"))
summary(dunnett_test)

```

```{r}
# =======================================
# 5. Grafico
# =======================================
# A) Boxplot
p1 <- ggplot(DatAov1, aes(x = Dosis, y = Longitud_Raiz)) +
  geom_boxplot(aes(fill = Dosis)) +
  geom_jitter(width = 0.2, alpha = 0.6) +
  labs(title = "Boxplot por Dosis",
       x = "Dosis",
       y = "Longitud_Raiz") +
  theme_minimal()
p1

# B) Gráfico de medias con intervalos de confianza
p2 <- ggplot(DatAov1, aes(x = Dosis, y = Longitud_Raiz)) +
  stat_summary(fun = mean, geom = "point", size = 3, color = "red") +
  stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.2) +
  geom_jitter(width = 0.2, alpha = 0.5) +
  labs(title = "Medias con Intervalos de Confianza 95%",
       x = "Dosis",
       y = "Longitud_Raiz") +
  theme_minimal()
p2

# C) Gráfico de residuos vs valores ajustados
p3 <- ggplot(data = NULL, aes(x = fitted(modeloAov1), y = residuals(modeloAov1))) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(title = "Residuos vs Valores Ajustados",
       x = "Valores Ajustados",
       y = "Residuos") +
  theme_minimal()
p3

# D) Histograma de residuos
p4 <- ggplot(data = NULL, aes(x = residuals(modeloAov1))) +
  geom_histogram(bins = 10, fill = "skyblue", alpha = 0.7) +
  labs(title = "Distribución de Residuos",
       x = "Residuos",
       y = "Frecuencia") +
  theme_minimal()
p4

# Mostrar todos los gráficos
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)


# E) Grafico de barras con letras de significancia
# Convertir rownames en columna
grupos_letras <- HSD_testAov1$groups %>%
  mutate(Dosis = rownames(HSD_testAov1$groups)) %>%
  select(Dosis, groups)

# Crear resumen y unir con letras
resumen <- DatAov1 %>%
  group_by(Dosis) %>%
  summarise(media = mean(Longitud_Raiz), sd = sd(Longitud_Raiz), .groups = "drop") %>%
  left_join(grupos_letras, by = "Dosis")

p5 <- ggplot(resumen, aes(x = Dosis, y = media)) +
  geom_col(fill = "skyblue", color = "black") +
  geom_errorbar(aes(ymin = media - sd, ymax = media + sd), width = 0.2) +
  geom_text(aes(label = groups, y = media + sd + 0.2), size = 5) +
  labs(y = "Longitud de raíz (cm)", x = "Dosis de fitohormona") +
  theme_minimal()
p5

# Mostrar gráficos segun preferencia
grid.arrange(p1, p5, nrow = 1, ncol = 2)

```
