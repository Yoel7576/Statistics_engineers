---
title: "DBCA-ANOVA Two-way"
author: "Henry W. Santillan Culquimboz"
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
output-dir: "../"
---

```{r}
# ====================================
# 1. CARGA DE LIBRERÍAS
# ====================================
# =============================================================================
# LIBRERÍAS NECESARIAS PARA ANOVA DE DOS VÍAS COMPLETO
# =============================================================================
# Librerías básicas
library(stats)      # Funciones básicas de estadística (viene con R base)
library(car)        # Para pruebas de homogeneidad de varianzas (Levene)
library(nortest)    # Para pruebas de normalidad adicionales
library(openxlsx)   # Para importar datos desde Excel

# Librerías para manipulación de datos y resultados
library(dplyr)      # Manipulación de datos
library(car)        # Para ANOVA tipo II/III (ya incluida arriba)
library(emmeans)    # Para comparaciones múltiples (medias marginales)
library(broom)      # Para convertir resultados a formato tidy

# Librerías para análisis post-hoc
library(agricolae)  # Pruebas post-hoc (Tukey, Duncan, LSD, etc.)
library(multcomp)   # Comparaciones múltiples

# Librerías para gráficos
library(ggplot2)    # Gráficos elegantes
library(ggpubr)     # Gráficos estadísticos con ggplot2
library(gridExtra)  # Organizar múltiples gráficos

# Librerías para reportes y tablas
library(broom)      # (repetido) Resultados tidy
library(knitr)      # Tablas elegantes
library(dplyr)      # (repetido) Manipulación de datos
```

```{r}
# ====================================
# 2. IMPORTACIÓN Y EXPLORACION DE DATOS
# ====================================
getwd() # Verificar escritorio

# Importar desde archivo Excel
DatAov2 <- read_excel("Datos/EjerciciosANOVA.xlsx", 
    sheet = "DCA-ANOVA_One-way")

# Ver estructura detallada
str(DatAov2)
```

```{r}
# ====================================
# 3. PREPARACION Y AJUSTE DEL MODELO
# ====================================
# Convert categorical variables to factors for incidence
DatAov2 <- DatAov2 |> 
  mutate(ID = factor(ID),
         Bloque = factor(Bloque),
         Genotipo = factor(Genotipo),
         Tratamiento = factor(Tratamiento))

# Ver estructura detallada
str(DatAov2)

# Ajuste del modelo estadistico (ANOVA DE DOS VIAS)
modeloAov2 <- aov(Rendimiento ~ Genotipo * Tratamiento + Bloque, data = DatAov2)
summary(modeloAov2)
```

```{r}
# =======================================
# 4. VERIFICACION DE SUPUESTOS DEL MODELO
# =======================================
# Verificación gráfica de supuestos
par(modeloAov2 = c(2, 2))
plot(modeloAov2)

# Gráfico Q-Q para residuos usando car::qqPlot
qqPlot(residuals(modeloAov2), 
       main = "Q-Q Plot de Residuos del ANOVA", 
       xlab = "Cuantiles teóricos", 
       ylab = "Cuantiles observados (Residuos)",
       col = "blue")

## A) NORMALIDAD DE RESIDUOS
# Prueba de Shapiro-Wilk para residuos
shapiro.test(residuals(modeloAov2))

# Prueba de Anderson-Darling
ad.test(residuals(modeloAov2))

# B) HOMOGENEIDAD DE VARIANZAS PARA GENOTIPO
# Prueba de Bartlett (más sensible a no normalidad)
bartlett.test(Rendimiento ~ Genotipo, data = DatAov2)

# B) HOMOGENEIDAD DE VARIANZAS PARA TRATAMIENTO
# Prueba de Bartlett (más sensible a no normalidad)
bartlett.test(Rendimiento ~ Tratamiento, data = DatAov2)
```

```{r}
# =======================================
# 5. PRUEBAS POST HOC COMPLETAS
# =======================================
# =======================================
# 5.1 POST HOC PARA FACTOR GENOTIPO
# =======================================
# Prueba de Tukey HSD para Genotipo
HSD_Genotipo <- HSD.test(modeloAov2, "Genotipo", group = TRUE)
print(HSD_Genotipo$groups)

# =======================================
# 5.2 POST HOC PARA FACTOR TRATAMIENTO
# =======================================
# Prueba de Tukey HSD para Tratamiento
HSD_Tratamiento <- HSD.test(modeloAov2, "Tratamiento", group = TRUE)
print(HSD_Tratamiento$groups)

# =======================================
# 5.3 POST HOC PARA LA INTERACCIÓN
# =======================================
# Prueba de Tukey HSD para la interacción
HSD_Interaccion <- HSD.test(modeloAov2, c("Genotipo", "Tratamiento"), group = TRUE)
print(HSD_Interaccion$groups)
```

```{r}
# =======================================
# 6. Graficos
# =======================================
# Gráfico de medias para Genotipo
p1 <- ggplot(DatAov2, aes(x = Genotipo, y = Rendimiento, fill = Genotipo)) +
  geom_boxplot(alpha = 0.7) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "red") +
  labs(title = "Rendimiento por Genotipo",
       x = "Genotipo", y = "Rendimiento") +
  theme_minimal() +
  theme(legend.position = "none")
p1

# Gráfico de medias para Tratamiento
p2 <- ggplot(DatAov2, aes(x = Tratamiento, y = Rendimiento, fill = Tratamiento)) +
  geom_boxplot(alpha = 0.7) +
  stat_summary(fun = mean, geom = "point", shape = 23, size = 3, fill = "red") +
  labs(title = "Rendimiento por Tratamiento",
       x = "Tratamiento", y = "Rendimiento") +
  theme_minimal() +
  theme(legend.position = "none")
p2

# Gráfico de interacción
p3 <- ggplot(DatAov2, aes(x = Genotipo, y = Rendimiento, color = Tratamiento, group = Tratamiento)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line", size = 1) +
  labs(title = "Interacción Genotipo x Tratamiento",
       x = "Genotipo", y = "Rendimiento medio") +
  theme_minimal()
p3

# Organizar múltiples gráficos
grid.arrange(p1, p2, p3, ncol = 2)
```

```{r}
# ====================================
# 7. GRÁFICO DE BARRAS PARA LA INTERACCIÓN
# ====================================
# Calcular medias por combinación de factores
medias_interaccion <- DatAov2 %>%
  group_by(Genotipo, Tratamiento) %>%
  summarise(
    Media = mean(Rendimiento, na.rm = TRUE),
    Error_Std = sd(Rendimiento, na.rm = TRUE),
    n = n(),
    Error_Estandar = Error_Std / sqrt(n),
    .groups = 'drop'
  )

# Ver los datos calculados
print(medias_interaccion)

# Gráfico de barras básico con ggplot2
grafico_barras <- ggplot(medias_interaccion, aes(x = Genotipo, y = Media, fill = Tratamiento)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7, color = "black", size = 0.5) +
  geom_errorbar(aes(ymin = Media - Error_Estandar, ymax = Media + Error_Estandar),
                position = position_dodge(0.7), width = 0.2) +
  labs(
    title = "Interacción Genotipo × Tratamiento",
    subtitle = "Efecto sobre el Rendimiento",
    x = "Genotipo",
    y = "Rendimiento Promedio",
    fill = "Tratamiento"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5, size = 12),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)
  ) +
  scale_fill_brewer(palette = "Set2")

# Mostrar el gráfico
print(grafico_barras)

# Guardar el gráfico
# ggsave("interaccion_genotipo_tratamiento.png", grafico_barras, 
#        width = 10, height = 6, dpi = 300)
```

```{r}
# Versión más simple
grafico_simple <- ggplot(medias_interaccion, aes(x = Genotipo, y = Media, fill = Tratamiento)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Interacción Genotipo × Tratamiento",
       x = "Genotipo",
       y = "Rendimiento Promedio") +
  theme_classic()

print(grafico_simple)
```
