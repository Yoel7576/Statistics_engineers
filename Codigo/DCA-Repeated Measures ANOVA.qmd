---
title: "DCA-Repeated Measures ANOVA"
author: "Henry W. Santillan Culquimboz"
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
output-dir: "../"
---

```{r}
# ====================================
# 1. CARGA DE LIBRERÍAS
# ====================================
# ------------------------------------
# Librerías básicas y manipulación
library(openxlsx)   # Importar desde Excel
library(dplyr)      # Manipulación de datos
library(stats)      # Estadística base
library(car)        # ANOVA tipo II/III, pruebas de Levene
library(nortest)    # Pruebas de normalidad alternativas

# ------------------------------------
# Librerías para ANOVA y post-hoc
library(rstatix)    # anova_test, shapiro_test, etc.
library(emmeans)    # Comparaciones de medias marginales
library(multcomp)   # Comparaciones múltiples
library(agricolae)  # Tests post-hoc como Tukey, LSD

# ------------------------------------
# Librerías para gráficos y reportes
library(ggplot2)    # Gráficos
library(ggpubr)     # Gráficos estadísticos
library(gridExtra)  # Organizar gráficos
library(knitr)      # Tablas en reportes
library(broom)      # Resultados tidy
```

```{r}
# ====================================
# 2. IMPORTACIÓN Y EXPLORACIÓN DE DATOS
# ====================================
getwd()  # Verificar directorio

# Importar datos desde Excel
DatAov2 <- read_excel("Datos/EjerciciosANOVA.xlsx", 
    sheet = "RepeatedMeasures_ANOVA") 

# Estructura de los datos
str(DatAov2)

# Convertir variables categóricas
DatAov2 <- DatAov2 %>%
  mutate(ID = factor(ID),
         Tiempo = factor(Tiempo),
         Tratamiento = factor(Tratamiento))

# Análisis descriptivo
DatAov2 %>%
  group_by(Tiempo) %>%
  get_summary_stats(Severidad, type = "mean_sd")

# Boxplot general
boxplot <- ggboxplot(DatAov2, x = "Tiempo", y = "Severidad", add = "point",
                     fill = "Tiempo")
boxplot
```

```{r}
# ====================================
# 3. VERIFICACIÓN DE SUPUESTOS
# ====================================
# Outliers
DatAov2 %>%
  group_by(Tiempo) %>%
  identify_outliers(Severidad)

# Normalidad por tiempo
DatAov2 %>%
  group_by(Tiempo) %>%
  shapiro_test(Severidad)

ggqqplot(DatAov2, "Severidad", facet.by = "Tiempo")

# Normalidad por Tratamiento y Tiempo
DatAov2 %>%
  group_by(Tratamiento, Tiempo) %>%
  shapiro_test(Severidad)

ggqqplot(DatAov2, "Severidad", facet.by = c("Tratamiento", "Tiempo"))
```

```{r}
# ====================================
# 4. AJUSTE DEL MODELO
# ====================================
modelo_rm <- anova_test(
  data = DatAov2,
  dv = Severidad,
  wid = ID,
  within = Tiempo,
  between = Tratamiento,
  effect.size = "pes"
)

# Resultados del ANOVA
get_anova_table(modelo_rm)

# Esfericidad
modelo_rm$`Mauchly's Test for Sphericity`
modelo_rm$`Sphericity Corrections`
```

```{r}
# ====================================
# 5. COMPARACIONES POST-HOC
# ====================================
# Comparaciones dentro de cada tratamiento (Tiempo dentro de cada uno)
DatAov2 %>%
  group_by(Tratamiento) %>%
  anova_test(dv = Severidad, wid = ID, within = Tiempo)

# Comparaciones entre tratamientos para cada tiempo
comparacion_multiple <- DatAov2 %>%
  group_by(Tiempo) %>%
  pairwise_t_test(
    formula = Severidad ~ Tratamiento,
    paired = FALSE,
    p.adjust.method = "bonferroni"
  ) %>%
  select(Tiempo, group1, group2, p, p.adj, p.adj.signif)
```

```{r}
# ====================================
# 6. VISUALIZACIÓN
# ====================================
# Línea de tiempo con errores estándar
ggline(DatAov2, x = "Tiempo", y = "Severidad", color = "Tratamiento",
       add = "mean_se", palette = "jco") +
  theme_minimal() +
  labs(title = "Severidad a lo largo del tiempo por tratamiento")

# Agregar posiciones para p-valor
comparacion_multiple <- comparacion_multiple %>%
  add_xy_position(x = "Tiempo")

# Boxplot con anotaciones de significancia
boxplot +
  stat_pvalue_manual(comparacion_multiple) +
  labs(
    subtitle = get_test_label(modelo_rm, detailed = TRUE),
    caption = get_pwc_label(comparacion_multiple)
  )

```
